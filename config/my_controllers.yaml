controller_manager:
  ros__parameters:
    update_rate: 1000
    #use_sim_time: true

    robot_move_controller:
      type: tricycle_controller/TricycleController

    robot_cam_controller:
      type: joint_trajectory_controller/JointTrajectoryController
    
    joint_broad:
      type: joint_state_broadcaster/JointStateBroadcaster

robot_move_controller:
  ros__parameters:
    # Model
    traction_joint_name: left_drive_wheel_joint # Name of traction joint in URDF
    steering_joint_name: left_chassis_steer_joint # Name of steering joint in URDF
    wheel_radius: 0.034 # Radius of front wheel
    wheelbase: 0.096 # Distance between center of back wheels and front wheel

    # Odometry
    odom_frame_id: odom
    base_frame_id: base_link
    open_loop: false # if True, uses cmd_vel instead of hardware interface feedback to compute odometry
    enable_odom_tf: true # If True, publishes odom<-base_link TF
    odom_only_twist: false # If True, publishes on /odom only linear.x and angular.z; Useful for computing odometry in another node, e.g robot_localization's ekf
    pose_covariance_diagonal: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # Need to be set if fusing odom with other localization source
    twist_covariance_diagonal: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # Need to be set if fusing odom with other localization source
    velocity_rolling_window_size: 10 # Rolling window size of rcppmath::RollingMeanAccumulator applied on linear and angular speeds published on odom

    # Rate Limiting
    traction: # All values should be positive
      # min_velocity: 0.0
      max_velocity: 10.0
      # min_acceleration: 0.0
      #max_acceleration: 1.0
      # min_deceleration: 0.0
      max_deceleration: 20.0
      # min_jerk: 0.0
      # max_jerk: 1000.0
    steering:
      min_position: -0.5
      max_position: 0.5
      # min_velocity: 0.0
      max_velocity: 1.0
      # min_acceleration: 0.0
      # max_acceleration: 1000.0

    # cmd_vel input
    cmd_vel_timeout: 500 # In milliseconds. Timeout to stop if no cmd_vel is received
    use_stamped_vel: false # Set to True if using TwistStamped.

    # Debug
    publish_ackermann_command: true # Publishes AckermannDrive. The speed does not comply to the msg definition, it the wheel angular speed in rad/s.

robot_cam_controller:
  ros__parameters:
    joints:
      - camera_pan_joint
      - camera_tilt_joint

    command_interfaces:
      - position

    state_interfaces:
      - position

    action_monitor_rate: 20.0

    allow_partial_joints_goal: false
    open_loop_control: true
    constraints:
      stopped_velocity_tolerance: 0.01
      goal_time: 0.0
      joint1:
        trajectory: 0.05
        goal: 0.03